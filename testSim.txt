正文是:     Blog: http://blog.csdn.net/lfhfut MSN: beyondlimit2001@hotmail.com QQ: 26085163    　　有关位置同步的方案实际上已经比较成熟，网上也有比较多的资料可供参考。在《带宽限制下的视觉实体属性传播》一文中，作者也简单提到了位置同步方案的构造过程，但涉及到细节的地方没有深入，这里专门针对这一主题做些回顾。  　　最直接的同步方案就是客户端在每次发生位置改变时都向服务器报告 ，服务器再转发给周围的其他玩家，其他客户端将对应的游戏实体移动到新的位置上。  　　但是这样存在一个问题，每个玩家的位置都是自己先开始移动，一段时间之后才在其他玩家的客户端上表现出来。如果只是希望每个客户端上看到的游戏对象都同时开始移动，那可以让玩家的每一步操作都由服务器确认之后再执行，这样误差将缩减到不同客户端之间的网络延时差。但是显然的，这样的做法不可能真正被采用，因为这将使得玩家的游戏体验非常的糟糕。有谁能忍受连每走一步路都要卡一下的游戏呢？  　　既然一定存在先后时间差，那需要一种方法来让不同客户端上看到的玩家位置不至于有太大的误差，尤其是不能有影响到游戏公平性的误差存在。根据误差出现的直接原因：时间差，我们应该能够想到一个解决方案，那就是让其他客户端设法弥补掉这段时间差内少走的距离。这样的话也就要求我们的消息包中多带一个开始移动的时间数据，用于其他客户端在收到这个消息包时计算对应的玩家实体已经移动过的时间和距离。  　　我们以一个实际的例子来说明如何减少这种误差的影响。假设玩家A以速度V从P1点去到P2点，A的网络延时为T1，在A旁边有个玩家B，他的网络延时为T2。B收到服务器转发过来的移动包时，A在其自己的客户端上已经移动了T1+T2的时间，在这段时间内他自己已经走过了V*(T1+T2)的距离。如果这时在B的客户端上开始将实体A从P1移动到P2，那显然两个客户端上看到的A的位置始终存在V*(T1+T2)的误差。  　　为了使A在B客户端上显示的位置与其实际位置的误差尽可能的缩小，一个简单的做法是直接将A的位置向前拖V*(T1+T2)然后开始移动，这样两者之间的误差便消除了。但这样会使得客户端的显示太鲁莽，要让其看起来平滑一些，我们可以考虑使用一些算法，比如计算出A从当前位置走到P2点还需要的时间，然后加快其速度使其在规定的时间内到达P2点，这样A和B看到的最终时间是相同的，但中间过程还是存在较多误差。另一种较好的做法是先让A以一个可接受的较快速度移动到其当前应该所在的位置稍前一点的地方，然后以正常速度移动到P2点，这样后面的移动情况与其实际移动情况基本吻合了。  　　看起来这个方案很完美，但是这里却忽略了一个问题：我们假设的是每次移动时都知道玩家要去的确切位置。这在靠鼠标点击来移动的2D游戏中是正好合适的，但是在WOW一类的靠键盘来移动的3D游戏中却没有办法采用。WOW中的移动消息都只能向服务器报告当前的坐标及朝向信息。  　　这类移动的位置同步其实也可以采用类似方案，服务器将移动玩家的当前位置信息广播给周围的其他玩家，当然其中也包含了时间戳。当其他玩家收到这个移动包后，表示的是在过去的某个时间里该玩家移动到了这个位置。如果只是简单地将其对应的实体移动到这个位置，那同样的，也存在位置误差。  　　与上一种情况类似，如果我们知道该玩家的移动速度，再通过数据包中的时间戳，假设该玩家还在以相同的速度朝相同的方向移动，那我们也可以预测出该玩家从开始移动到现在这段时间内他走了多远了距离。我们也可以将其位置做适当的修正，并使其继续移动下去。  　　我们需要先停下来考虑一下这些算法的部分细节。其中出现了一些数据是否应该包含在我们的每个消息包中，也就是我们需要考虑的另外一个问题：移动同步的消息中应该包含哪些数据，以及这些数据到底应该向哪些玩家广播。  　　对于2D游戏的情况来说，我们的算法需要的数据有：玩家的速度V，玩家开始移动的时间T0，收到数据包的时间T1，玩家当前位置P1和玩家要去的位置P2。T1和P1从当前客户端上都可以取到，而速度V一般来说不会经常改变，至少不是每次移动时都不一样，所以我们可以为速度的改变设计单独的消息码，这样V值也是可以在客户端上取到的。最后，每个移动消息中包含的数据只需要有移动到的位置P2和开始移动的时间T0。  　　其他客户端在使用特定算法将玩家移动到P2后会将其停在此处，直到收到下一个移动包时再开始移动。而对于在移动过程中又收到了新的移动包的处理过程基本类似，不做过多描述。  　　对于3D游戏的情况，算法是基本相同的，但是没有目标点，替换为移动方向，比如是向正前方移动，还是向左或向右移动等。在这种情况下，只要没有收到玩家停止移动的消息，其他客户端上都会以最后一次收到的移动包的状态来继续模拟移动。  　　所以，在网络偶尔卡一下的时候也会出现一些奇怪的现象。比如WOW中，看到队友直冲冲地走下了悬崖，你刚喊了句“怎么掉下去了？”只见队友又从身后走出来，还冒出一句：“没啊，我就在你旁边!”  　　关于数据要向哪些人广播的问题，其实很简单，哪些人会看到这个玩家就需要向哪些人广播。不管是直接在主屏幕上看到还是在大地图上看到的代表其位置的一个点。但是，针对不同的人使用的广播策略还是存在差异。  　　在《带宽限制下的视觉实体属性传播》一文中提出了一个方案很值得参考。该方案提出的基础是因为3D空间透视的原因，离你很远的一个玩家移动了10米，最终在你的显示器上看到的位移可能只有一个象素；而离你不到一米的一个玩家虽然只移动了一米，但最终显示出来的位移可能会有几十个象素。所以，远处玩家的移动并不需要非常严格的关注，但近处玩家的移动同步需要非常高的优先级。  　　这个方案的实现还依赖于另一项技术要求，玩家的属性更新以一定的频率来进行，更新时比较一下当前属性值与上次更新时的属性值，如果存在差异则通知客户端更新，另外如果中间跳过了某次更新也不会对客户端表现及游戏公平性造成什么影响。比如这里要处理的玩家坐标，第一次移动到A点，第二次从A点又移动到B点，如果移动到A点的更新包没有发送，直接发送了移动到B点的更新包，这将不会对游戏逻辑产生大的影响。  　　这套方案基本上是为3D游戏的实体属性广播优化而设计的，在2D游戏中很难使用。一是斜45度视角的2D游戏中屏幕顶端、中间和底部任何一个位置上的玩家移动，其距离和象素比是完全相同的，因为画面不存在透视，所以也就没有远处对象更新频率低这一可能。另外2D游戏中的移动与3D游戏也存在差异，具体情况前面有详细描述，2D游戏中基本上每一次移动都需要广播，不能跳过哪一个，否则玩家看到的现象就是在乱跑，这也必将影响到技能的使用等游戏逻辑。  　　有关位置同步所涉及到的一些技术细节及优化方案上面描述了一部分，但是在实际的应用中是否会使用还是要看具体游戏的需求。比如大话类型的游戏，其本身对位置的精确同步就没有要求，两个客户端上出现一前一后的移动也不会影响任何的游戏逻辑，所以前面提到的同步方案可能都用不上。  　　而对于一些同步要求很高的游戏，如WOW中盗贼这类职业的需求，上面的方案可能还不够细致，还需要设计更加有效的同步方案。  　　另外，在位置同步过程中还有一个不容忽视的问题是外挂。我们不能像WOW那样完全依赖客户端，如果没有暴雪那样强硬的封号措施，游戏也就成为了外挂们的温床。所以，如何在服务器端模拟每个客户端的移动，如何检测出客户端是否存在作弊行为，也是需要重点关注的一个问题。      
!
SimHash.cpp中第36行-移除stopword:!
(
SimHash.cpp中第36行-移除stopword:(
)
SimHash.cpp中第36行-移除stopword:)
*
SimHash.cpp中第36行-移除stopword:*
/
SimHash.cpp中第36行-移除stopword:/
10米
2001
26085163
2d
3d
45
:
SimHash.cpp中第36行-移除stopword::
b
SimHash.cpp中第36行-移除stopword:b
beyondlimit
beyondlimit2001@hotmail.com
blog
blog.csdn.net
com
SimHash.cpp中第36行-移除stopword:com
blog.csdn.net
csdn
hotmail
http
lfhfut
msn
net
p1
p2
qq
t0
t1
t1+t2
t2
v
SimHash.cpp中第36行-移除stopword:v
、
SimHash.cpp中第36行-移除stopword:、
。
SimHash.cpp中第36行-移除stopword:。
《
SimHash.cpp中第36行-移除stopword:《
》
SimHash.cpp中第36行-移除stopword:》
wow
一
SimHash.cpp中第36行-移除stopword:一
一个
SimHash.cpp中第36行-移除stopword:一个
一些
SimHash.cpp中第36行-移除stopword:一些
一前一后
一句
一定
SimHash.cpp中第36行-移除stopword:一定
一次
SimHash.cpp中第36行-移除stopword:一次
一是
一步
一段时间
一点
一种
一类
一般来说
一部分
一项
上
SimHash.cpp中第36行-移除stopword:上
上看
上都
上面
SimHash.cpp中第36行-移除stopword:上面
上都
下
SimHash.cpp中第36行-移除stopword:下
下一个
下了
下去
SimHash.cpp中第36行-移除stopword:下去
不
SimHash.cpp中第36行-移除stopword:不
不一样
不上
不会
SimHash.cpp中第36行-移除stopword:不会
不上
不做
不到
不可能
不同
SimHash.cpp中第36行-移除stopword:不同
不够
SimHash.cpp中第36行-移除stopword:不够
不容忽视
不是
SimHash.cpp中第36行-移除stopword:不是
不容忽视
不管
SimHash.cpp中第36行-移除stopword:不管
不能
SimHash.cpp中第36行-移除stopword:不能
与
SimHash.cpp中第36行-移除stopword:与
与其
SimHash.cpp中第36行-移除stopword:与其
不至于
SimHash.cpp中第36行-移除stopword:不至于
专门
SimHash.cpp中第36行-移除stopword:专门
两者之间
严格
SimHash.cpp中第36行-移除stopword:严格
两者之间
个
SimHash.cpp中第36行-移除stopword:个
两者之间
中
SimHash.cpp中第36行-移除stopword:中
两者之间
中间
SimHash.cpp中第36行-移除stopword:中间
两个
两者之间
为
SimHash.cpp中第36行-移除stopword:为
主
主题
之
SimHash.cpp中第36行-移除stopword:之
主
主题
之后
SimHash.cpp中第36行-移除stopword:之后
之间
也
SimHash.cpp中第36行-移除stopword:也
乱跑
了
SimHash.cpp中第36行-移除stopword:了
乱跑
些
SimHash.cpp中第36行-移除stopword:些
人
SimHash.cpp中第36行-移除stopword:人
什么
SimHash.cpp中第36行-移除stopword:什么
从
SimHash.cpp中第36行-移除stopword:从
产生
SimHash.cpp中第36行-移除stopword:产生
他
SimHash.cpp中第36行-移除stopword:他
以
SimHash.cpp中第36行-移除stopword:以
以为
SimHash.cpp中第36行-移除stopword:以为
代表
以及
SimHash.cpp中第36行-移除stopword:以及
任何
SimHash.cpp中第36行-移除stopword:任何
优先级
优化
会
SimHash.cpp中第36行-移除stopword:会
会有
传播
但
SimHash.cpp中第36行-移除stopword:但
但是
SimHash.cpp中第36行-移除stopword:但是
位移
位置
低
体验
作
作弊
作者
你
SimHash.cpp中第36行-移除stopword:你
作者
使
SimHash.cpp中第36行-移除stopword:使
使得
SimHash.cpp中第36行-移除stopword:使得
使用
SimHash.cpp中第36行-移除stopword:使用
使其
例子
依赖
依赖于
便
SimHash.cpp中第36行-移除stopword:便
依赖于
信息
修正
值
假设
做
做法
停下来
停在
停止
偶尔
SimHash.cpp中第36行-移除stopword:偶尔
像
SimHash.cpp中第36行-移除stopword:像
停止
先
先后
SimHash.cpp中第36行-移除stopword:先后
先让
公平
关于
SimHash.cpp中第36行-移除stopword:关于
关注
其
SimHash.cpp中第36行-移除stopword:其
其他
SimHash.cpp中第36行-移除stopword:其他
其实
SimHash.cpp中第36行-移除stopword:其实
具体
SimHash.cpp中第36行-移除stopword:具体
内
SimHash.cpp中第36行-移除stopword:内
其中
SimHash.cpp中第36行-移除stopword:其中
公平
关注
再
SimHash.cpp中第36行-移除stopword:再
再通过
冒出
冲冲
减少
几
SimHash.cpp中第36行-移除stopword:几
减少
出来
SimHash.cpp中第36行-移除stopword:出来
则
SimHash.cpp中第36行-移除stopword:则
刚
SimHash.cpp中第36行-移除stopword:刚
出现
SimHash.cpp中第36行-移除stopword:出现
冲冲
减少
到
SimHash.cpp中第36行-移除stopword:到
到底
SimHash.cpp中第36行-移除stopword:到底
到现在
到达
前
前方
前面
SimHash.cpp中第36行-移除stopword:前面
前方
加快
包
包含
十个
单独
卡
却
SimHash.cpp中第36行-移除stopword:却
原因
去
SimHash.cpp中第36行-移除stopword:去
原因
去了
参考
又
SimHash.cpp中第36行-移除stopword:又
又从
及
SimHash.cpp中第36行-移除stopword:及
又从
发生
发送
取
句
另
SimHash.cpp中第36行-移除stopword:另
另一种
另外
SimHash.cpp中第36行-移除stopword:另外
另一种
只
SimHash.cpp中第36行-移除stopword:只
句
另一种
只是
SimHash.cpp中第36行-移除stopword:只是
只能
只要
SimHash.cpp中第36行-移除stopword:只要
只需
可
SimHash.cpp中第36行-移除stopword:可
只需
可以
SimHash.cpp中第36行-移除stopword:可以
只见
只需
可供
可接受
可能
SimHash.cpp中第36行-移除stopword:可能
可接受
合适
同时
SimHash.cpp中第36行-移除stopword:同时
同样
SimHash.cpp中第36行-移除stopword:同样
合适
同步
后
SimHash.cpp中第36行-移除stopword:后
后才
后面
SimHash.cpp中第36行-移除stopword:后面
后才
向
SimHash.cpp中第36行-移除stopword:向
后才
向前
向右
向哪
向左
向正
否则
SimHash.cpp中第36行-移除stopword:否则
向正
吻合
呢
SimHash.cpp中第36行-移除stopword:呢
吻合
周围
SimHash.cpp中第36行-移除stopword:周围
哪一个
哪些
SimHash.cpp中第36行-移除stopword:哪些
喊了
回顾
因为
SimHash.cpp中第36行-移除stopword:因为
图上
在
SimHash.cpp中第36行-移除stopword:在
地
SimHash.cpp中第36行-移除stopword:地
地方
地走
坐标
基本
SimHash.cpp中第36行-移除stopword:基本
基础
处理
SimHash.cpp中第36行-移除stopword:处理
多
SimHash.cpp中第36行-移除stopword:多
外
多的
多远
大地
大的
大话
太
太大
奇怪
如
SimHash.cpp中第36行-移除stopword:如
奇怪
如何
SimHash.cpp中第36行-移除stopword:如何
太大
奇怪
如果
SimHash.cpp中第36行-移除stopword:如果
始终
存在
SimHash.cpp中第36行-移除stopword:存在
完美
实体
实现
SimHash.cpp中第36行-移除stopword:实现
实际
SimHash.cpp中第36行-移除stopword:实际
实体
实际上
客户
客户端
对
SimHash.cpp中第36行-移除stopword:对
对于
SimHash.cpp中第36行-移除stopword:对于
对应
SimHash.cpp中第36行-移除stopword:对应
对象
封号
将
SimHash.cpp中第36行-移除stopword:将
将使
将其
将对
少
尤其是
就
SimHash.cpp中第36行-移除stopword:就
就在
就是
SimHash.cpp中第36行-移除stopword:就是
屏幕
属性
差
差异
已经
SimHash.cpp中第36行-移除stopword:已经
带
SimHash.cpp中第36行-移除stopword:带
带宽
平滑
并不
SimHash.cpp中第36行-移除stopword:并不
并使
广播
应
应用
SimHash.cpp中第36行-移除stopword:应用
应该
SimHash.cpp中第36行-移除stopword:应该
底部
度
延时
开始
SimHash.cpp中第36行-移除stopword:开始
强硬
当
SimHash.cpp中第36行-移除stopword:当
强硬
当前
SimHash.cpp中第36行-移除stopword:当前
强硬
当然
SimHash.cpp中第36行-移除stopword:当然
影响
很
SimHash.cpp中第36行-移除stopword:很
影响
很值得
很远
很难
很高
得
SimHash.cpp中第36行-移除stopword:得
很高
必将
SimHash.cpp中第36行-移除stopword:必将
很难
很高
忍受
忽略
怎么
SimHash.cpp中第36行-移除stopword:怎么
忽略
性
悬崖
情况
情况下
想到
成为
SimHash.cpp中第36行-移除stopword:成为
想到
成熟
我
SimHash.cpp中第36行-移除stopword:我
我们
SimHash.cpp中第36行-移除stopword:我们
或
SimHash.cpp中第36行-移除stopword:或
所
SimHash.cpp中第36行-移除stopword:所
所以
SimHash.cpp中第36行-移除stopword:所以
所在
SimHash.cpp中第36行-移除stopword:所在
执行
技术
技能
报告
拖
挂
掉
掉下
措施
描述
提出
提到
收到
改变
数据
文中
文案
斜
新包
新的
方向
方案
方法
旁边
既然
SimHash.cpp中第36行-移除stopword:既然
旁边
时
时候
SimHash.cpp中第36行-移除stopword:时候
时间
时间内
时间差
时间戳
是
SimHash.cpp中第36行-移除stopword:是
显然
SimHash.cpp中第36行-移除stopword:显然
显示
显示器
暴
更
SimHash.cpp中第36行-移除stopword:更
暴
更加
SimHash.cpp中第36行-移除stopword:更加
显示器
暴
更新
替换
最
SimHash.cpp中第36行-移除stopword:最
最终
有
SimHash.cpp中第36行-移除stopword:有
最终
有关
SimHash.cpp中第36行-移除stopword:有关
有效
SimHash.cpp中第36行-移除stopword:有效
服务器
朝
SimHash.cpp中第36行-移除stopword:朝
服务器
朝向
本身
SimHash.cpp中第36行-移除stopword:本身
来
SimHash.cpp中第36行-移除stopword:来
来说
SimHash.cpp中第36行-移除stopword:来说
朝向
构造
某
SimHash.cpp中第36行-移除stopword:某
某个
SimHash.cpp中第36行-移除stopword:某个
根据
SimHash.cpp中第36行-移除stopword:根据
检
模拟
次
正好
正常
SimHash.cpp中第36行-移除stopword:正常
正好
正被
此处
SimHash.cpp中第36行-移除stopword:此处
正被
步操
段
每
SimHash.cpp中第36行-移除stopword:每
段
每一
每个
SimHash.cpp中第36行-移除stopword:每个
比
SimHash.cpp中第36行-移除stopword:比
比如
SimHash.cpp中第36行-移除stopword:比如
每次
比较
SimHash.cpp中第36行-移除stopword:比较
没有
SimHash.cpp中第36行-移除stopword:没有
没有办法
测出
消息
消除
涉及
深入
SimHash.cpp中第36行-移除stopword:深入
温床
游戏
点
点击
然后
SimHash.cpp中第36行-移除stopword:然后
点
点击
特定
状态
玩家
现象
用
SimHash.cpp中第36行-移除stopword:用
用于
由
SimHash.cpp中第36行-移除stopword:由
画面
的
SimHash.cpp中第36行-移除stopword:的
盗贼
目标
直
直到
SimHash.cpp中第36行-移除stopword:直到
目标
直
直接
SimHash.cpp中第36行-移除stopword:直接
盗贼
目标
直
直接原因
相同
SimHash.cpp中第36行-移除stopword:相同
直接原因
看到
SimHash.cpp中第36行-移除stopword:看到
真
知道
SimHash.cpp中第36行-移除stopword:知道
真
码
确切
确认
离你
移动
SimHash.cpp中第36行-移除stopword:移动
空间
端
端上
端的
第一次
第二次
等
SimHash.cpp中第36行-移除stopword:等
第二次
策略
简单
算出
算法
米
类似
类型
精确
糟糕
素
细致
细节
经常
SimHash.cpp中第36行-移除stopword:经常
给
SimHash.cpp中第36行-移除stopword:给
继续
SimHash.cpp中第36行-移除stopword:继续
编剧
缩减
缩小
网上
网络
考虑
SimHash.cpp中第36行-移除stopword:考虑
网络
而
SimHash.cpp中第36行-移除stopword:而
网络
职业
能
SimHash.cpp中第36行-移除stopword:能
自己
SimHash.cpp中第36行-移除stopword:自己
至少
虽然
SimHash.cpp中第36行-移除stopword:虽然
至少
行为
SimHash.cpp中第36行-移除stopword:行为
能够
SimHash.cpp中第36行-移除stopword:能够
至少
表现
表示
SimHash.cpp中第36行-移除stopword:表示
要
SimHash.cpp中第36行-移除stopword:要
要有
要求
SimHash.cpp中第36行-移除stopword:要求
规定
SimHash.cpp中第36行-移除stopword:规定
要看
视觉
视角
解决
计
计算
让
SimHash.cpp中第36行-移除stopword:让
设计
该
SimHash.cpp中第36行-移除stopword:该
设计
详细
误差
说明
SimHash.cpp中第36行-移除stopword:说明
谁
SimHash.cpp中第36行-移除stopword:谁
象
资料
走
走了
走出
走到
走的
走过
距离
路
跳过
身后
转发
较多
较好
较快
过
SimHash.cpp中第36行-移除stopword:过
过多
过来
SimHash.cpp中第36行-移除stopword:过来
过多
过程
过程中
近处
还
SimHash.cpp中第36行-移除stopword:还
近处
还在
还是
SimHash.cpp中第36行-移除stopword:还是
还有
SimHash.cpp中第36行-移除stopword:还有
还在
还需
这
SimHash.cpp中第36行-移除stopword:这
还需
这个
SimHash.cpp中第36行-移除stopword:这个
这套
这时
SimHash.cpp中第36行-移除stopword:这时
这套
这样
SimHash.cpp中第36行-移除stopword:这样
这套
这种
SimHash.cpp中第36行-移除stopword:这种
这套
这类
这里
SimHash.cpp中第36行-移除stopword:这里
远处
连
SimHash.cpp中第36行-移除stopword:连
远处
适当
SimHash.cpp中第36行-移除stopword:适当
通知
速度
造成
SimHash.cpp中第36行-移除stopword:造成
逻辑
那
SimHash.cpp中第36行-移除stopword:那
那样
SimHash.cpp中第36行-移除stopword:那样
部分
SimHash.cpp中第36行-移除stopword:部分
都
SimHash.cpp中第36行-移除stopword:都
都会
都是
采用
重点
针对
SimHash.cpp中第36行-移除stopword:针对
问题
SimHash.cpp中第36行-移除stopword:问题
问题是
间里
队友
限制
SimHash.cpp中第36行-移除stopword:限制
需求
需要
SimHash.cpp中第36行-移除stopword:需要
需求
非常
SimHash.cpp中第36行-移除stopword:非常
顶端
预
频率
高的
鲁莽
鼠标
，
SimHash.cpp中第36行-移除stopword:，
；
SimHash.cpp中第36行-移除stopword:；
？
SimHash.cpp中第36行-移除stopword:？
：
SimHash.cpp中第36行-移除stopword:：
鲁莽
鼠标
SimHash.cpp中60行--关键字:玩家--
SimHash.cpp中60行--关键字:位置--
SimHash.cpp中60行--关键字:游戏--
SimHash.cpp中60行--关键字:方案--
SimHash.cpp中60行--关键字:a--
SimHash.cpp中60行--关键字:文案--
1111000000000001010000100110010100100000011011010001010001100011
